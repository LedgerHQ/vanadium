name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually triggered'

env:
  CARGO_TERM_COLOR: always

jobs:
  test_app_sdk:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "app-sdk"
      test_dirs_json: '["app-sdk"]'

  test_client_sdk:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "client-sdk"
      test_dirs_json: '["client-sdk"]'

  test_common:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "common"
      test_dirs_json: '["common"]'
       
  # build Vanadium VM app

  build_vanadium_app:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: "vanadium_binaries"
      builder: ledger-app-builder
      cargo_ledger_build_args: "--features blind_registration"

  # build a custom binary for the Vanadium VM app only for the tests
  build_vanadium_app_for_tests:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: "vanadium_binaries_for_tests"
      builder: ledger-app-builder
      cargo_ledger_build_args: "--features run_tests"

  # Build benchmark testcases
  # Even if we don't run them in the CI, it's good to ensure they can at least compile
  build_benchmark_test_cases:
    name: benchmark test cases, Build on Risc-V target
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: riscv32imc-unknown-none-elf
          components: rustfmt, clippy
          profile: minimal
      - name: Clone
        uses: actions/checkout@v4
      - name: Build app
        working-directory: bench
        run: |
          for case_dir in ./cases/*; do
            (cd "$case_dir" && cargo +stable build --release --target=riscv32imc-unknown-none-elf) || exit 1
          done

  # VM app tests in speculos
  
  run_vanadium_app_speculos_tests:
    name: Vanadium speculos tests ('run_tests' feature)

    strategy:
      matrix:
        include:
          - model: flex  # not much reasons to run this test on all devices

    runs-on: ubuntu-latest
    needs: [build_vanadium_app_for_tests]
    steps:
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          components: rustfmt, clippy
          profile: minimal
      - name: Install Speculos
        run: |
          pip install speculos
      - name: Install dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y libudev-dev pkg-config && \
          sudo apt-get install -y qemu-user-static libvncserver-dev
      - name: Clone
        uses: actions/checkout@v4
      - name: Download Vanadium binaries for tests
        uses: actions/download-artifact@v4
        with:
          name: vanadium_binaries_for_tests
          path: ./vanadium_binaries_for_tests

      - name: Run tests
        run: |
          speculos --display headless vanadium_binaries_for_tests/${{ matrix.model }}/release/app-vanadium

  ### vlib tests

  test_vlib_bitcoin:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "vlib-bitcoin"
      test_dirs_json: '["libs/bitcoin"]'
      cargo_test_args: '--features serde'

  ### V-Apps

  ## vnd-test

  # build test V-App
  build_vnd_test:
    uses: ./.github/workflows/reusable_vapp_build.yaml
    with:
      app_name: "vnd-test"
      app_dir: "apps/test/app"
      artifact_name: "vnd_test_riscv_binary"
      binary_name: "vnd-test"

  test_vnd_test_app:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "vnd-test-app"
      test_dirs_json: '["apps/test/app"]'

  test_vnd_test_app_client:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "vnd-test-client"
      test_dirs_json: '["apps/test/client"]'

  vnd_test_speculos_integration_tests:
    needs: [build_vanadium_app, build_vnd_test]
    uses: ./.github/workflows/reusable_vapp_integration_tests.yaml
    with:
      app_name: 'vnd-test'
      client_dir: 'apps/test/client'
      vanadium_artifact_name: 'vanadium_binaries'
      vapp_artifact_name: 'vnd_test_riscv_binary'
      vapp_binary_name: 'vnd-test.vapp'
      models_json: '["nanox","nanosplus","flex","stax"]'
      cargo_test_features: 'speculos-tests'

  ## vnd-sadik

  # build sadik V-App
  build_vnd_sadik:
    uses: ./.github/workflows/reusable_vapp_build.yaml
    with:
      app_name: "vnd-sadik"
      app_dir: "apps/sadik/app"
      artifact_name: "vnd_sadik_riscv_binary"
      binary_name: "vnd-sadik"

  vnd_sadik_integration_tests:
    needs: [build_vanadium_app, build_vnd_sadik]
    uses: ./.github/workflows/reusable_vapp_integration_tests.yaml
    with:
      app_name: 'vnd-sadik'
      client_dir: 'apps/sadik/client'
      vanadium_artifact_name: 'vanadium_binaries'
      vapp_artifact_name: 'vnd_sadik_riscv_binary'
      vapp_binary_name: 'vnd-sadik.vapp'
      models_json: '["nanox","nanosplus","flex","stax"]'
      cargo_test_features: 'speculos-tests'

  ## vnd-bitcoin

  # build bitcoin V-App
  build_vnd_bitcoin:
    uses: ./.github/workflows/reusable_vapp_build.yaml
    with:
      app_name: "vnd-bitcoin"
      app_dir: "apps/bitcoin/app"
      artifact_name: "vnd_bitcoin_riscv_binary"
      binary_name: "vnd-bitcoin"

  # build bitcoin V-App with autoapprove feature
  build_vnd_bitcoin_autoapprove:
    uses: ./.github/workflows/reusable_vapp_build.yaml
    with:
      app_name: "vnd-bitcoin-autoapprove"
      app_dir: "apps/bitcoin/app"
      artifact_name: "vnd_bitcoin_riscv_autoapprove_binary"
      binary_name: "vnd-bitcoin"
      extra_build_args: '--features autoapprove'

  test_vnd_bitcoin_app:
    uses: ./.github/workflows/reusable_native_tests.yaml
    with:
      app_name: "vnd-bitcoin"
      test_dirs_json: '["apps/bitcoin/common","apps/bitcoin/app"]'

  vnd_bitcoin_integration_tests:
    needs: [build_vanadium_app, build_vnd_bitcoin_autoapprove]
    uses: ./.github/workflows/reusable_vapp_integration_tests.yaml
    with:
      app_name: 'vnd-bitcoin'
      client_dir: 'apps/bitcoin/client'
      vanadium_artifact_name: 'vanadium_binaries'
      vapp_artifact_name: 'vnd_bitcoin_riscv_autoapprove_binary'
      vapp_binary_name: 'vnd-bitcoin.vapp'
      models_json: '["nanox","nanosplus","flex","stax"]'
      cargo_test_features: 'speculos-tests'
